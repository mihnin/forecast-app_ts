services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"  # Изменяем внешний порт на 3000, внутренний остается 80
    volumes:
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./models:/app/models
    env_file:
      - .env
    environment:
      - MAX_WORKERS=2

  db:
    image: postgres:13
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data

  worker:
    build: ./backend
    command: celery -A app.core.worker worker --loglevel=info
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./models:/app/models
    env_file:
      - .env
    environment:
      - MAX_WORKERS=2

volumes:
  postgres_data:
  redis_data: