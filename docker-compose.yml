services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"  # Изменяем внешний порт на 3000, внутренний остается 80
    volumes:
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./models:/app/models
    env_file:
      - .env
    environment:
      - MAX_WORKERS=4
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    shm_size: 4G

  redis:
    image: redis:6-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    command: python -m celery -A app.core.worker worker --loglevel=info
    depends_on:
      - backend
      - redis
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    env_file:
      - .env
    environment:
      - MAX_WORKERS=4
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    shm_size: 8G

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './redis_data'