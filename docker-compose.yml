version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=development

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/forecast_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_WORKERS=2
      - ENVIRONMENT=development

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=forecast_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  worker:
    build: ./backend
    command: celery -A app.core.worker worker --loglevel=info
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - REDIS_HOST=redis
      - MAX_WORKERS=2
      - ENVIRONMENT=development

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  redis_data: